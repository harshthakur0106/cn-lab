import java.util.Scanner;
import java.util.Arrays;

public class subnet{
	public static void main (String[] args){
		System.out.println("This is a subnet program");
		
		Scanner scanner = new Scanner(System.in);
		
		System.out.print("Enter the I.P. address : ");
		String address = scanner.nextLine();
		String[] octets = address.split("\\.");
		System.out.println(Arrays.toString(octets));
		
		System.out.print("Enter the CIDR address: ");
		int cidr = scanner.nextInt();
		
		int first = Integer.parseInt(octets[0]);
		String ipClass = "";
		
		if (first >= 1 && first <= 126){
			ipClass = "A";
		}
		else if(first >= 128 && first <= 191){
			ipClass = "B";
		}
		else if(first >= 192 && first <= 223){
			ipClass = "C";
		}
		else if(first >= 224 && first <= 239){
			ipClass = "D";
		}
		else if(first >= 240 && first <= 255){
			ipClass = "E";
		}
		else{
			ipClass = "Unknown Class";
		}
		
		System.out.println("Class of the IP Address: " + ipClass);
		
		StringBuilder binaryIP = new StringBuilder();
		for (String octet : octets) {
			int octetValue = Integer.parseInt(octet);
			String binaryOctet = Integer.toBinaryString(octetValue);
			while (binaryOctet.length() < 8) {
				binaryOctet = "0" + binaryOctet ;
			}
			binaryIP.append(binaryOctet);
		}
		
		System.out.println("Binary IP Address: " + binaryIP.toString());
		
		int numSubnets = (int) Math.pow(2, 32 - cidr);
		System.out.println("Number of IP addresses in each network: " + numSubnets);
		
		int subnets = 256 / numSubnets;
		System.out.println("Total number of Networks: " + subnets);
		
		int numHosts = (int) Math.pow(2, 32 - cidr) - 2;
		System.out.println("Number of hosts in each network: " + numHosts);
		
		scanner.close();
		
	}
} 


// address= 192.168.10.0 and cidr adress=28


##PYTHON CODE
def calculate_subnet_details(prefix_length):
    subnet_mask = (1 << 32) - (1 << (32 - prefix_length))
    num_subnets = 2 ** (32 - prefix_length)
    num_ip_addresses = 2 ** (32 - prefix_length)
    num_hosts = num_ip_addresses - 2
    total_num_networks = 256 // num_subnets
    return (
        (subnet_mask >> 24) & 0xFF,
        (subnet_mask >> 16) & 0xFF,
        (subnet_mask >> 8) & 0xFF,
        subnet_mask & 0xFF,
        num_subnets,
        num_ip_addresses,
        num_hosts,
        total_num_networks,
    )

def find_ip_address_class(first_octet):
    first_octet = int(first_octet)
    if 1 <= first_octet <= 126:
        return "Class A"
    elif 128 <= first_octet <= 191:
        return "Class B"
    elif 192 <= first_octet <= 223:
        return "Class C"
    elif 224 <= first_octet <= 239:
        return "Class D (Multicast)"
    elif 240 <= first_octet <= 255:
        return "Class E (Reserved)"
    else:
        return "Unknown"

def main():
    ip_address = input("Enter IP address (e.g., 192.168.1.0): ")
    first_octet = ip_address.split(".")[0]
    prefix_length = int(input("Enter prefix length (e.g., 24 for /24): "))
    subnet_mask = calculate_subnet_details(prefix_length)
    ip_class = find_ip_address_class(first_octet)
    print("IP Address Class:", ip_class)
    print("Subnet Mask:", ".".join(str(octet) for octet in subnet_mask[:4]))
    print("Number of Subnets:", subnet_mask[4])
    print("Number of IP Addresses in each Subnet:", subnet_mask[5])
    print("Number of Hosts in each Subnet:", subnet_mask[6])

if __name__ == "__main__":
    main()

		 
